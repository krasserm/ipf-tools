<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<available property="allElementsFile" file="${builder}/allElements.xml" value="${builder}/allElements.xml"/>
	<property name="allElementsFile" location="${eclipse.pdebuild.templates}/headless-build/allElements.xml"/>

	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>
	
	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
		<!--copy todir="${buildDirectory}/plugins">
			<fileset dir="${buildDirectory}/../../"
			includes="org.openehealth.ipf.eclipse.manager.*/**"
			excludes="org.openehealth.ipf.eclipse.manager.feature/**"/>
		</copy-->
		<copy todir="${buildDirectory}/features">
			<fileset dir="${buildDirectory}/../../"
			includes="org.openehealth.ipf.runtime.feature/**"/>
		</copy>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
		<eclipse.idReplacer
	    featureFilePath="${buildDirectory}/features/org.openehealth.ipf.runtime.feature/feature.xml"
	    selfVersion="${runtimeFeatureId}"
	    featureIds=""/>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
	    <property name="UpdateSiteStagingLocation" value="${buildDirectory}/updatesite"/>
	    <property name="sitePackagePrefix" value="org.openehealth.ipf.runtime.updatesite"/>
        <antcall target="generateUpdateSite"/>
		<antcall target="gatherLogs" />
	</target>
	
	<target name="generateUpdateSite">
	    <!-- Create the directory structure -->
	    <mkdir dir="${UpdateSiteStagingLocation}"/>
	    <mkdir dir="${UpdateSiteStagingLocation}/features"/>
	    <mkdir dir="${UpdateSiteStagingLocation}/plugins"/>
	    <!-- Build the jar files -->
	    <antcall target="allElements">
		    <param name="genericTargets" value="${builder}/customTargets.xml"/>
		    <param name="target" value="updateSiteExport"/>
	    </antcall>
	    <antcall target="copySiteXml"/>
	    <!--antcall target="createNightlyBuildSiteXml"/-->
	</target>

	<target name="updateSiteExport">
	    <ant antfile="build.xml" dir="${buildDirectory}/features/${id}/" target="build.update.jar">
		    <property name="feature.destination" value="${UpdateSiteStagingLocation}/features"/>
		    <property name="plugin.destination" value="${UpdateSiteStagingLocation}/plugins"/>
	    </ant>
		<unzip src="${buildDirectory}/IPF-Runtime/org.openehealth.ipf.runtime.feature-IPF-Runtime.zip" dest="${UpdateSiteStagingLocation}/plugins">
			<patternset>
				<include name="eclipse/plugins/*.*"/>
			</patternset>
			<mapper type="flatten"/>
		</unzip>

	</target>
	
	<target name="copySiteXml">
		<copy file="${buildDirectory}/../../org.openehealth.ipf.runtime.updatesite/site.xml"
			  todir="${UpdateSiteStagingLocation}"/>
		<!-- Do not copy the index and styles-->
		<!--copy file="${buildDirectory}/../../org.openehealth.ipf.runtime.updatesite/index.html"
			  todir="${UpdateSiteStagingLocation}"/>
		<copy todir="${UpdateSiteStagingLocation}/web">
			<fileset dir="${buildDirectory}/../../org.openehealth.ipf.runtime.updatesite/web"/>
		</copy-->
		<eclipse.idReplacer
            featureFilePath="${UpdateSiteStagingLocation}/site.xml"
            selfVersion="${runtimeFeatureId}"
            featureIds=""
        />      
        <replace file="${UpdateSiteStagingLocation}/site.xml" token="0.0.0" value="${runtimeFeatureId}"/>
    </target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
